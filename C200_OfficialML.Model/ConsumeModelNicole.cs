// This file was auto-generated by ML.NET Model Builder. 

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Microsoft.ML;
using C200_ProjectML.Model;

namespace C200_ProjectML.Model
{
    public class ConsumeModelNicole
    {
        private static Lazy<PredictionEngine<ModelInputNicole, ModelOutputNicole>> PredictionEngine = new Lazy<PredictionEngine<ModelInputNicole, ModelOutputNicole>>(CreatePredictionEngine);

        // For more info on consuming ML.NET models, visit https://aka.ms/mlnet-consume
        // Method for consuming model in your app
        public static ModelOutputNicole Predict(ModelInputNicole input)
        {
            ModelOutputNicole result = PredictionEngine.Value.Predict(input);
            return result;
        }

        public static PredictionEngine<ModelInputNicole, ModelOutputNicole> CreatePredictionEngine()
        {
            // Create new MLContext
            MLContext mlContext = new MLContext();

            // Load model & create prediction engine
            string modelPath = @"C:\Users\20007073\Desktop\RP\Y2 Sem 2\C200 Special Project\Presentation\V5_C200_Official (2)\C200_OfficialML.Model\MLModelNicole.zip";
            //C:\Users\20026236\AppData\Local\Temp\MLVSTools\C200_ProjectML\C200_ProjectML.Model\MLModel.zip
            ITransformer mlModel = mlContext.Model.Load(modelPath, out var modelInputSchema);
            var predEngine = mlContext.Model.CreatePredictionEngine<ModelInputNicole, ModelOutputNicole>(mlModel);

            return predEngine;
        }
    }
}
